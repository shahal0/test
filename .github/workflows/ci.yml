name: CI/CD Pipeline for user-api

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      # Step 1: Setup SSH Key
      - name: Setup SSH Key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > site.pem
          chmod 400 site.pem

      # Step 2: Connect to EC2 and Pull Latest Code
      - name: Pull Latest Code from Git
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i deploy_key.pub -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            cd /home/ubuntu/test
            git pull origin master
          '

      # Step 3: Build Go Application aaa
      - name: Testing and Building Go Application
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i deploy_key.pub -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            # Install Go
            sudo apt update
            sudo apt install -y golang-go

            # Verify Go installation
            go version
            
            cd /home/ubuntu/test
            go mod tidy
            go test ./... -v
            go build -o nproject  ./cmd/main.go
          '

      # Step 4: Restart Application Service
      - name: Restart Application Service
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i site.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            sudo systemctl restart thefurnishstore.service
          '

      # Step 5: Cleanup SSH Key
      - name: Cleanup
        run: |
          rm -f site.pem
